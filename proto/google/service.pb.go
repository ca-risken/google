// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.12.1
// source: google/service.proto

package google

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListGoogleDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoogleDataSourceId uint32 `protobuf:"varint,1,opt,name=google_data_source_id,json=googleDataSourceId,proto3" json:"google_data_source_id,omitempty"`
	Name               string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListGoogleDataSourceRequest) Reset() {
	*x = ListGoogleDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGoogleDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGoogleDataSourceRequest) ProtoMessage() {}

func (x *ListGoogleDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGoogleDataSourceRequest.ProtoReflect.Descriptor instead.
func (*ListGoogleDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_google_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListGoogleDataSourceRequest) GetGoogleDataSourceId() uint32 {
	if x != nil {
		return x.GoogleDataSourceId
	}
	return 0
}

func (x *ListGoogleDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListGoogleDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoogleDataSource []*GoogleDataSource `protobuf:"bytes,1,rep,name=google_data_source,json=googleDataSource,proto3" json:"google_data_source,omitempty"`
}

func (x *ListGoogleDataSourceResponse) Reset() {
	*x = ListGoogleDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGoogleDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGoogleDataSourceResponse) ProtoMessage() {}

func (x *ListGoogleDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGoogleDataSourceResponse.ProtoReflect.Descriptor instead.
func (*ListGoogleDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_google_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListGoogleDataSourceResponse) GetGoogleDataSource() []*GoogleDataSource {
	if x != nil {
		return x.GoogleDataSource
	}
	return nil
}

type ListGCPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId          uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GoogleDataSourceId uint32 `protobuf:"varint,2,opt,name=google_data_source_id,json=googleDataSourceId,proto3" json:"google_data_source_id,omitempty"`
	GcpId              uint32 `protobuf:"varint,3,opt,name=gcp_id,json=gcpId,proto3" json:"gcp_id,omitempty"`
}

func (x *ListGCPRequest) Reset() {
	*x = ListGCPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGCPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGCPRequest) ProtoMessage() {}

func (x *ListGCPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGCPRequest.ProtoReflect.Descriptor instead.
func (*ListGCPRequest) Descriptor() ([]byte, []int) {
	return file_google_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListGCPRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListGCPRequest) GetGoogleDataSourceId() uint32 {
	if x != nil {
		return x.GoogleDataSourceId
	}
	return 0
}

func (x *ListGCPRequest) GetGcpId() uint32 {
	if x != nil {
		return x.GcpId
	}
	return 0
}

type ListGCPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gcp []*GCP `protobuf:"bytes,1,rep,name=gcp,proto3" json:"gcp,omitempty"`
}

func (x *ListGCPResponse) Reset() {
	*x = ListGCPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGCPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGCPResponse) ProtoMessage() {}

func (x *ListGCPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGCPResponse.ProtoReflect.Descriptor instead.
func (*ListGCPResponse) Descriptor() ([]byte, []int) {
	return file_google_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListGCPResponse) GetGcp() []*GCP {
	if x != nil {
		return x.Gcp
	}
	return nil
}

type GetGCPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GcpId     uint32 `protobuf:"varint,2,opt,name=gcp_id,json=gcpId,proto3" json:"gcp_id,omitempty"`
}

func (x *GetGCPRequest) Reset() {
	*x = GetGCPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGCPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGCPRequest) ProtoMessage() {}

func (x *GetGCPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGCPRequest.ProtoReflect.Descriptor instead.
func (*GetGCPRequest) Descriptor() ([]byte, []int) {
	return file_google_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetGCPRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetGCPRequest) GetGcpId() uint32 {
	if x != nil {
		return x.GcpId
	}
	return 0
}

type GetGCPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gcp *GCP `protobuf:"bytes,1,opt,name=gcp,proto3" json:"gcp,omitempty"`
}

func (x *GetGCPResponse) Reset() {
	*x = GetGCPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGCPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGCPResponse) ProtoMessage() {}

func (x *GetGCPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGCPResponse.ProtoReflect.Descriptor instead.
func (*GetGCPResponse) Descriptor() ([]byte, []int) {
	return file_google_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetGCPResponse) GetGcp() *GCP {
	if x != nil {
		return x.Gcp
	}
	return nil
}

type PutGCPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32        `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Gcp       *GCPForUpsert `protobuf:"bytes,2,opt,name=gcp,proto3" json:"gcp,omitempty"`
}

func (x *PutGCPRequest) Reset() {
	*x = PutGCPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutGCPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutGCPRequest) ProtoMessage() {}

func (x *PutGCPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutGCPRequest.ProtoReflect.Descriptor instead.
func (*PutGCPRequest) Descriptor() ([]byte, []int) {
	return file_google_service_proto_rawDescGZIP(), []int{6}
}

func (x *PutGCPRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutGCPRequest) GetGcp() *GCPForUpsert {
	if x != nil {
		return x.Gcp
	}
	return nil
}

type PutGCPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gcp *GCP `protobuf:"bytes,1,opt,name=gcp,proto3" json:"gcp,omitempty"`
}

func (x *PutGCPResponse) Reset() {
	*x = PutGCPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutGCPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutGCPResponse) ProtoMessage() {}

func (x *PutGCPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutGCPResponse.ProtoReflect.Descriptor instead.
func (*PutGCPResponse) Descriptor() ([]byte, []int) {
	return file_google_service_proto_rawDescGZIP(), []int{7}
}

func (x *PutGCPResponse) GetGcp() *GCP {
	if x != nil {
		return x.Gcp
	}
	return nil
}

type DeleteGCPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GcpId     uint32 `protobuf:"varint,2,opt,name=gcp_id,json=gcpId,proto3" json:"gcp_id,omitempty"`
}

func (x *DeleteGCPRequest) Reset() {
	*x = DeleteGCPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGCPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGCPRequest) ProtoMessage() {}

func (x *DeleteGCPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGCPRequest.ProtoReflect.Descriptor instead.
func (*DeleteGCPRequest) Descriptor() ([]byte, []int) {
	return file_google_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteGCPRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteGCPRequest) GetGcpId() uint32 {
	if x != nil {
		return x.GcpId
	}
	return 0
}

type InvokeScanGCPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GcpId     uint32 `protobuf:"varint,2,opt,name=gcp_id,json=gcpId,proto3" json:"gcp_id,omitempty"`
}

func (x *InvokeScanGCPRequest) Reset() {
	*x = InvokeScanGCPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeScanGCPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeScanGCPRequest) ProtoMessage() {}

func (x *InvokeScanGCPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeScanGCPRequest.ProtoReflect.Descriptor instead.
func (*InvokeScanGCPRequest) Descriptor() ([]byte, []int) {
	return file_google_service_proto_rawDescGZIP(), []int{9}
}

func (x *InvokeScanGCPRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InvokeScanGCPRequest) GetGcpId() uint32 {
	if x != nil {
		return x.GcpId
	}
	return 0
}

var File_google_service_proto protoreflect.FileDescriptor

var file_google_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x1a, 0x13, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a, 0x1b, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x6d, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x12, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x10, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x79, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x43, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x63, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x63, 0x70, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x43, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x03, 0x67, 0x63, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x47, 0x43, 0x50, 0x52, 0x03,
	0x67, 0x63, 0x70, 0x22, 0x45, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x43, 0x50, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x63, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x63, 0x70, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x47, 0x43, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x03,
	0x67, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x47, 0x43, 0x50, 0x52, 0x03, 0x67,
	0x63, 0x70, 0x22, 0x5d, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x47, 0x43, 0x50, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x03, 0x67, 0x63, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x47, 0x43, 0x50, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x03, 0x67, 0x63,
	0x70, 0x22, 0x36, 0x0a, 0x0e, 0x50, 0x75, 0x74, 0x47, 0x43, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x67, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x47, 0x43, 0x50, 0x52, 0x03, 0x67, 0x63, 0x70, 0x22, 0x48, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x43, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x67, 0x63, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x63,
	0x70, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61,
	0x6e, 0x47, 0x43, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x63,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x63, 0x70, 0x49,
	0x64, 0x32, 0xa5, 0x04, 0x0a, 0x0d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x43, 0x50, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x43, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x43, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x47, 0x43, 0x50, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x43, 0x50, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x43, 0x50, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x50, 0x75, 0x74, 0x47, 0x43, 0x50, 0x12,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x50, 0x75, 0x74, 0x47, 0x43, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x50, 0x75,
	0x74, 0x47, 0x43, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x43, 0x50, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x43, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x4a, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x47, 0x43,
	0x50, 0x12, 0x23, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x47, 0x43, 0x50, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x0d,
	0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x41, 0x6c, 0x6c, 0x12, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x79, 0x62, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x2f, 0x6d, 0x69, 0x6d, 0x6f, 0x73, 0x61, 0x2d, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_service_proto_rawDescOnce sync.Once
	file_google_service_proto_rawDescData = file_google_service_proto_rawDesc
)

func file_google_service_proto_rawDescGZIP() []byte {
	file_google_service_proto_rawDescOnce.Do(func() {
		file_google_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_service_proto_rawDescData)
	})
	return file_google_service_proto_rawDescData
}

var file_google_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_google_service_proto_goTypes = []interface{}{
	(*ListGoogleDataSourceRequest)(nil),  // 0: google.google.ListGoogleDataSourceRequest
	(*ListGoogleDataSourceResponse)(nil), // 1: google.google.ListGoogleDataSourceResponse
	(*ListGCPRequest)(nil),               // 2: google.google.ListGCPRequest
	(*ListGCPResponse)(nil),              // 3: google.google.ListGCPResponse
	(*GetGCPRequest)(nil),                // 4: google.google.GetGCPRequest
	(*GetGCPResponse)(nil),               // 5: google.google.GetGCPResponse
	(*PutGCPRequest)(nil),                // 6: google.google.PutGCPRequest
	(*PutGCPResponse)(nil),               // 7: google.google.PutGCPResponse
	(*DeleteGCPRequest)(nil),             // 8: google.google.DeleteGCPRequest
	(*InvokeScanGCPRequest)(nil),         // 9: google.google.InvokeScanGCPRequest
	(*GoogleDataSource)(nil),             // 10: google.google.GoogleDataSource
	(*GCP)(nil),                          // 11: google.google.GCP
	(*GCPForUpsert)(nil),                 // 12: google.google.GCPForUpsert
	(*Empty)(nil),                        // 13: google.google.Empty
}
var file_google_service_proto_depIdxs = []int32{
	10, // 0: google.google.ListGoogleDataSourceResponse.google_data_source:type_name -> google.google.GoogleDataSource
	11, // 1: google.google.ListGCPResponse.gcp:type_name -> google.google.GCP
	11, // 2: google.google.GetGCPResponse.gcp:type_name -> google.google.GCP
	12, // 3: google.google.PutGCPRequest.gcp:type_name -> google.google.GCPForUpsert
	11, // 4: google.google.PutGCPResponse.gcp:type_name -> google.google.GCP
	0,  // 5: google.google.GoogleService.ListGoogleDataSource:input_type -> google.google.ListGoogleDataSourceRequest
	2,  // 6: google.google.GoogleService.ListGCP:input_type -> google.google.ListGCPRequest
	4,  // 7: google.google.GoogleService.GetGCP:input_type -> google.google.GetGCPRequest
	6,  // 8: google.google.GoogleService.PutGCP:input_type -> google.google.PutGCPRequest
	8,  // 9: google.google.GoogleService.DeleteGCP:input_type -> google.google.DeleteGCPRequest
	9,  // 10: google.google.GoogleService.InvokeScanGCP:input_type -> google.google.InvokeScanGCPRequest
	13, // 11: google.google.GoogleService.InvokeScanAll:input_type -> google.google.Empty
	1,  // 12: google.google.GoogleService.ListGoogleDataSource:output_type -> google.google.ListGoogleDataSourceResponse
	3,  // 13: google.google.GoogleService.ListGCP:output_type -> google.google.ListGCPResponse
	5,  // 14: google.google.GoogleService.GetGCP:output_type -> google.google.GetGCPResponse
	7,  // 15: google.google.GoogleService.PutGCP:output_type -> google.google.PutGCPResponse
	13, // 16: google.google.GoogleService.DeleteGCP:output_type -> google.google.Empty
	13, // 17: google.google.GoogleService.InvokeScanGCP:output_type -> google.google.Empty
	13, // 18: google.google.GoogleService.InvokeScanAll:output_type -> google.google.Empty
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_google_service_proto_init() }
func file_google_service_proto_init() {
	if File_google_service_proto != nil {
		return
	}
	file_google_entity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_google_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGoogleDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGoogleDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGCPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGCPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGCPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGCPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutGCPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutGCPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGCPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeScanGCPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_service_proto_goTypes,
		DependencyIndexes: file_google_service_proto_depIdxs,
		MessageInfos:      file_google_service_proto_msgTypes,
	}.Build()
	File_google_service_proto = out.File
	file_google_service_proto_rawDesc = nil
	file_google_service_proto_goTypes = nil
	file_google_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GoogleServiceClient is the client API for GoogleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoogleServiceClient interface {
	// Google DataSource
	ListGoogleDataSource(ctx context.Context, in *ListGoogleDataSourceRequest, opts ...grpc.CallOption) (*ListGoogleDataSourceResponse, error)
	// GCP
	ListGCP(ctx context.Context, in *ListGCPRequest, opts ...grpc.CallOption) (*ListGCPResponse, error)
	GetGCP(ctx context.Context, in *GetGCPRequest, opts ...grpc.CallOption) (*GetGCPResponse, error)
	PutGCP(ctx context.Context, in *PutGCPRequest, opts ...grpc.CallOption) (*PutGCPResponse, error)
	DeleteGCP(ctx context.Context, in *DeleteGCPRequest, opts ...grpc.CallOption) (*Empty, error)
	// Scan
	InvokeScanGCP(ctx context.Context, in *InvokeScanGCPRequest, opts ...grpc.CallOption) (*Empty, error)
	InvokeScanAll(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type googleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGoogleServiceClient(cc grpc.ClientConnInterface) GoogleServiceClient {
	return &googleServiceClient{cc}
}

func (c *googleServiceClient) ListGoogleDataSource(ctx context.Context, in *ListGoogleDataSourceRequest, opts ...grpc.CallOption) (*ListGoogleDataSourceResponse, error) {
	out := new(ListGoogleDataSourceResponse)
	err := c.cc.Invoke(ctx, "/google.google.GoogleService/ListGoogleDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleServiceClient) ListGCP(ctx context.Context, in *ListGCPRequest, opts ...grpc.CallOption) (*ListGCPResponse, error) {
	out := new(ListGCPResponse)
	err := c.cc.Invoke(ctx, "/google.google.GoogleService/ListGCP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleServiceClient) GetGCP(ctx context.Context, in *GetGCPRequest, opts ...grpc.CallOption) (*GetGCPResponse, error) {
	out := new(GetGCPResponse)
	err := c.cc.Invoke(ctx, "/google.google.GoogleService/GetGCP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleServiceClient) PutGCP(ctx context.Context, in *PutGCPRequest, opts ...grpc.CallOption) (*PutGCPResponse, error) {
	out := new(PutGCPResponse)
	err := c.cc.Invoke(ctx, "/google.google.GoogleService/PutGCP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleServiceClient) DeleteGCP(ctx context.Context, in *DeleteGCPRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/google.google.GoogleService/DeleteGCP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleServiceClient) InvokeScanGCP(ctx context.Context, in *InvokeScanGCPRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/google.google.GoogleService/InvokeScanGCP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleServiceClient) InvokeScanAll(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/google.google.GoogleService/InvokeScanAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoogleServiceServer is the server API for GoogleService service.
type GoogleServiceServer interface {
	// Google DataSource
	ListGoogleDataSource(context.Context, *ListGoogleDataSourceRequest) (*ListGoogleDataSourceResponse, error)
	// GCP
	ListGCP(context.Context, *ListGCPRequest) (*ListGCPResponse, error)
	GetGCP(context.Context, *GetGCPRequest) (*GetGCPResponse, error)
	PutGCP(context.Context, *PutGCPRequest) (*PutGCPResponse, error)
	DeleteGCP(context.Context, *DeleteGCPRequest) (*Empty, error)
	// Scan
	InvokeScanGCP(context.Context, *InvokeScanGCPRequest) (*Empty, error)
	InvokeScanAll(context.Context, *Empty) (*Empty, error)
}

// UnimplementedGoogleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGoogleServiceServer struct {
}

func (*UnimplementedGoogleServiceServer) ListGoogleDataSource(context.Context, *ListGoogleDataSourceRequest) (*ListGoogleDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGoogleDataSource not implemented")
}
func (*UnimplementedGoogleServiceServer) ListGCP(context.Context, *ListGCPRequest) (*ListGCPResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGCP not implemented")
}
func (*UnimplementedGoogleServiceServer) GetGCP(context.Context, *GetGCPRequest) (*GetGCPResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGCP not implemented")
}
func (*UnimplementedGoogleServiceServer) PutGCP(context.Context, *PutGCPRequest) (*PutGCPResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutGCP not implemented")
}
func (*UnimplementedGoogleServiceServer) DeleteGCP(context.Context, *DeleteGCPRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGCP not implemented")
}
func (*UnimplementedGoogleServiceServer) InvokeScanGCP(context.Context, *InvokeScanGCPRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeScanGCP not implemented")
}
func (*UnimplementedGoogleServiceServer) InvokeScanAll(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeScanAll not implemented")
}

func RegisterGoogleServiceServer(s *grpc.Server, srv GoogleServiceServer) {
	s.RegisterService(&_GoogleService_serviceDesc, srv)
}

func _GoogleService_ListGoogleDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGoogleDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleServiceServer).ListGoogleDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.google.GoogleService/ListGoogleDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleServiceServer).ListGoogleDataSource(ctx, req.(*ListGoogleDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleService_ListGCP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGCPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleServiceServer).ListGCP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.google.GoogleService/ListGCP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleServiceServer).ListGCP(ctx, req.(*ListGCPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleService_GetGCP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGCPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleServiceServer).GetGCP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.google.GoogleService/GetGCP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleServiceServer).GetGCP(ctx, req.(*GetGCPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleService_PutGCP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutGCPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleServiceServer).PutGCP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.google.GoogleService/PutGCP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleServiceServer).PutGCP(ctx, req.(*PutGCPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleService_DeleteGCP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGCPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleServiceServer).DeleteGCP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.google.GoogleService/DeleteGCP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleServiceServer).DeleteGCP(ctx, req.(*DeleteGCPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleService_InvokeScanGCP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeScanGCPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleServiceServer).InvokeScanGCP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.google.GoogleService/InvokeScanGCP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleServiceServer).InvokeScanGCP(ctx, req.(*InvokeScanGCPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleService_InvokeScanAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleServiceServer).InvokeScanAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.google.GoogleService/InvokeScanAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleServiceServer).InvokeScanAll(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoogleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.google.GoogleService",
	HandlerType: (*GoogleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListGoogleDataSource",
			Handler:    _GoogleService_ListGoogleDataSource_Handler,
		},
		{
			MethodName: "ListGCP",
			Handler:    _GoogleService_ListGCP_Handler,
		},
		{
			MethodName: "GetGCP",
			Handler:    _GoogleService_GetGCP_Handler,
		},
		{
			MethodName: "PutGCP",
			Handler:    _GoogleService_PutGCP_Handler,
		},
		{
			MethodName: "DeleteGCP",
			Handler:    _GoogleService_DeleteGCP_Handler,
		},
		{
			MethodName: "InvokeScanGCP",
			Handler:    _GoogleService_InvokeScanGCP_Handler,
		},
		{
			MethodName: "InvokeScanAll",
			Handler:    _GoogleService_InvokeScanAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/service.proto",
}
